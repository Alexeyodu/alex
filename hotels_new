from sqlalchemy import select, func
from src.repositories.base import BaseRepository
from src.models.hotels import HotelsOrm
from src.models.rooms import RoomsOrm
from src.schemas.hotels import Hotel
from datetime import date
from src.repositories.utils import rooms_ids_for_booking



class HotelsRepository(BaseRepository):
   model = HotelsOrm
   schema = Hotel
   
   
   
   async def get_all(self, 
                     location,
                     title,
                     limit,
                     offset,                     
                     ):
      query =  select(HotelsOrm)
      if location:
            query = query.filter(func.lower(HotelsOrm.location).like(f"%{location.strip().lower()}%"))
      if title:
         query = query.filter(func.lower(HotelsOrm.title).like(f"%{title.strip().lower()}%"))
      query =   (
               query
               .limit(limit)
               .offset(offset)               
            )
      result = await self.session.execute(query)
      
      return [Hotel.model_validate(hotel, from_attributes=True) for hotel in result.scalars().all()]
   
   
   
   async def get_filtered_by_time(
      self,
      date_from: date,
      date_to: date,
   ):
      rooms_ids_to_get = rooms_ids_for_booking(date_from=date_from, date_to=date_to)
      hotels_ids_to_get = (
         select(RoomsOrm.hotels_id)
         .select_from(RoomsOrm)
         .filter(RoomsOrm.id.in_(rooms_ids_to_get))
      )
      
      return await self.get_filtered(HotelsOrm.id.in_(hotels_ids_to_get))
